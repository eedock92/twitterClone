[{"D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\index.js":"1","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\components\\App.js":"2","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\components\\Router.js":"3","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\routers\\Home.js":"4","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\routers\\Auth.js":"5","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\fbase.js":"6","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\components\\Navigation.js":"7","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\routers\\Profile.js":"8","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\components\\Bweet.js":"9","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\components\\BweetFactory.js":"10","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\components\\AuthForm.js":"11"},{"size":290,"mtime":1613038649825,"results":"12","hashOfConfig":"13"},{"size":1127,"mtime":1613012215676,"results":"14","hashOfConfig":"13"},{"size":1168,"mtime":1613099658368,"results":"15","hashOfConfig":"13"},{"size":1013,"mtime":1613099294584,"results":"16","hashOfConfig":"13"},{"size":1414,"mtime":1613099495572,"results":"17","hashOfConfig":"13"},{"size":896,"mtime":1612789561852,"results":"18","hashOfConfig":"13"},{"size":1349,"mtime":1613127713021,"results":"19","hashOfConfig":"13"},{"size":1960,"mtime":1613099252309,"results":"20","hashOfConfig":"13"},{"size":2444,"mtime":1613102313920,"results":"21","hashOfConfig":"13"},{"size":3412,"mtime":1613102396642,"results":"22","hashOfConfig":"13"},{"size":2197,"mtime":1613100335871,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"p2w6b9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\index.js",[],["51","52"],"D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\components\\App.js",[],"D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\components\\Router.js",[],"D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\routers\\Home.js",["53"],"import React , { useEffect, useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport Bweet from \"components/Bweet\";\r\nimport BweetFactory from \"components/BweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n   \r\n    const [bweets, setBweets] = useState([]);\r\n    useEffect(() => {\r\n       dbService.collection(\"bweets\").onSnapshot(snapshot => {\r\n            const bweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setBweets(bweetArray);\r\n        });\r\n    }, []);\r\n  \r\nreturn (\r\n    <div className=\"container\">\r\n        <BweetFactory userObj = {userObj}/>\r\n        <div style={{ marginTop: 30 }}>\r\n            {bweets.map((bweet) => (\r\n                 <Bweet \r\n                 key={bweet.id} \r\n                 bweetObj={bweet} \r\n                 isOwner={bweet.creatorId === userObj.uid}\r\n                 />\r\n             ))}\r\n        </div>\r\n    </div>\r\n);\r\n};\r\n<span>Home</span>;\r\nexport default Home;","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\routers\\Auth.js",[],"D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\fbase.js",[],"D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\components\\Navigation.js",[],"D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\routers\\Profile.js",["54"],"import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    \r\n    };\r\n\r\n    // const getMyBweets = async() => {\r\n    //     const bweets = await dbService\r\n    //     .collection(\"bweets\")\r\n    //     .where(\"creatorId\", \"==\", userObj.uid)\r\n    //     .orderBy(\"createdAt\")\r\n    //     .get();\r\n    //     console.log(bweets.docs.map(doc => doc.data()));\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //     getMyBweets();\r\n    // },[])\r\n    \r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input \r\n                onChange={onChange}\r\n                type=\"text\" \r\n                autoFocus\r\n                placeholder=\"Display name\"\r\n                value={newDisplayName}\r\n                className=\"formInput\"\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Update Profile\"\r\n                  className=\"formBtn\"\r\n                  style={{\r\n                    marginTop: 10,\r\n                  }}\r\n        />\r\n    </form>\r\n    <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>      \r\n    );\r\n};\r\n","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\components\\Bweet.js",["55"],"import React, {useState}from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Bweet = ({ bweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newBweet, setNewBweet] = useState(bweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this bweet?\");\r\n        if(ok){\r\n            //delete bweet\r\n            await dbService.doc(`bweets/${bweetObj.id}`).delete();\r\n            await storageService.refFromURL(bweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      await dbService.doc(`bweets/${bweetObj.id}`).update({\r\n          text:newBweet\r\n      })\r\n      setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n      const {\r\n          target: {value},\r\n      } = event;\r\n      setNewBweet(value);\r\n  };\r\n  return(\r\n    <div className=\"nweet\">\r\n        {editing ? (\r\n            <>\r\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"\"\r\n                value = {newBweet} \r\n                required \r\n                autoFocus\r\n                onChange={onChange}\r\n                className=\"formInput\"\r\n            />\r\n             <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n            </form> \r\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                     Cancel\r\n            </span>\r\n            </>\r\n            ) : (\r\n            <>\r\n                <h4>{bweetObj.text}</h4>\r\n                {bweetObj.attachmentUrl && <img src={bweetObj.attachmentUrl} />}\r\n                {isOwner && (\r\n                    <div class=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>\r\n                )}\r\n            </> \r\n        )}\r\n  </div>\r\n  );\r\n};\r\nexport default Bweet;","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\components\\BweetFactory.js",["56"],"import React, {useState} from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst BweetFactory = ({userObj}) => {\r\n    const [bweet, setBweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (bweet === \"\") {\r\n            return;\r\n          }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n            const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n            const bweetObj = {\r\n                text: bweet,\r\n                createdAt: Date.now(),\r\n                creatorId: userObj.uid,\r\n                attachmentUrl\r\n            };\r\n        \r\n       \r\n        await dbService.collection(\"bweets\").add(bweetObj);\r\n    //     await dbService.collection(\"bweets\").add({\r\n    //         text: bweet,\r\n    //         createdAt: Date.now(),\r\n    //         creatorId: userObj.uid,\r\n    //         attachmentUrl\r\n    // });\r\n        setBweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setBweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target:{files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent)=> {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\nreturn(\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={bweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n    <input \r\n            id=\"attach-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onFileChange}\r\n            style={{\r\n              opacity: 0,\r\n            }}\r\n    />\r\n    <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\r\n    <input type=\"submit\" value=\"Bweet\" />\r\n    {attachment &&(\r\n      <div className=\"factoryForm__attachment\">\r\n            <img\r\n                src={attachment}\r\n                style={{\r\n                backgroundImage: attachment,\r\n                }}\r\n            />\r\n      <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n      </div>\r\n      </div>\r\n        )}\r\n</form>\r\n)}\r\n\r\nexport default BweetFactory;","D:\\ByungSoo\\DEV\\potfolio\\twitterClone\\bwitter\\src\\components\\AuthForm.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":21,"nodeType":"63","messageId":"64","endLine":2,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":5,"column":1,"nodeType":"67","endLine":69,"endColumn":3},{"ruleId":"68","severity":1,"message":"69","line":54,"column":44,"nodeType":"70","endLine":54,"endColumn":80},{"ruleId":"68","severity":1,"message":"69","line":92,"column":13,"nodeType":"70","endLine":97,"endColumn":15},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'storageService' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]